[{"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/index.js":"1","/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/reportWebVitals.js":"2","/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/App.jsx":"3","/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/Posts.jsx":"4","/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/PostDetail.jsx":"5"},{"size":500,"mtime":1667984023156,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1667984023156,"results":"8","hashOfConfig":"7"},{"size":463,"mtime":1668359853499,"results":"9","hashOfConfig":"7"},{"size":2211,"mtime":1668359847564,"results":"10","hashOfConfig":"7"},{"size":2112,"mtime":1668014739735,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ndfwdx",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/index.js",[],["24","25"],"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/reportWebVitals.js",[],"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/App.jsx",[],"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/Posts.jsx",["26"],"import { useEffect, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nimport { PostDetail } from \"./PostDetail\";\nconst maxPostPage = 10;\n\nasync function fetchPosts(pageNum) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts?_limit=10&_page=${pageNum}`\n  );\n  return response.json();\n}\n\nexport function Posts() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    if (currentPage < maxPostPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"posts\", nextPage], () =>\n        fetchPosts(nextPage)\n      );\n    }\n  }, [currentPage, queryClient]);\n\n  // useQuery(\"쿼리 키\", 비동기 함수);\n  const fallback = []\n  const { data = fallback, isLoading, isError, error } = useQuery(\n    [\"posts\", currentPage],\n    () => fetchPosts(currentPage),\n    {\n      staleTime: 2000,\n      keepPreviousData: true\n    }\n  );\n  // if (isLoading) return <h3>Loading...</h3>;\n  // isLoading 은 fetchPosts 함수가 실행중이면서 캐싱된 데이터가 없을때 참이된다.\n  // isFetching 은 캐싱된 데이터와 상관없이 fetchPosts 함수가 실행하면 참이된다.\n  if (isError)\n    return (\n      <>\n        <h3>Oops, 웁스 something went wrong</h3> <p>{error.toString()}</p>\n      </>\n    );\n\n  return (\n    <>\n      <ul>\n        {data.map((post) => (\n          <li\n            key={post.id}\n            className=\"post-title\"\n            onClick={() => setSelectedPost(post)}\n          >\n            {post.title}\n          </li>\n        ))}\n      </ul>\n      <div className=\"pages\">\n        <button\n          disabled={currentPage <= 1}\n          onClick={() => {\n            setCurrentPage((prev) => prev - 1);\n          }}\n        >\n          Previous page\n        </button>\n        <span>Page {currentPage}</span>\n        <button\n          disabled={currentPage >= maxPostPage}\n          onClick={() => {\n            setCurrentPage((prev) => prev + 1);\n          }}\n        >\n          Next page\n        </button>\n      </div>\n      <hr />\n      {selectedPost && <PostDetail post={selectedPost} />}\n    </>\n  );\n}\n","/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/PostDetail.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":31,"column":28,"nodeType":"33","messageId":"34","endLine":31,"endColumn":37},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]