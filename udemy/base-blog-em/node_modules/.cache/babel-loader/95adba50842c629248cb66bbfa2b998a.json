{"ast":null,"code":"var _jsxFileName = \"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { QueryClient, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nasync function fetchComments(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  if (window.confirm(\"삭제?\")) {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\n      method: \"DELETE\"\n    });\n    return response.json();\n  }\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\n    method: \"PATCH\",\n    data: {\n      title: \"REACT QUERY FOREVER!!!!\"\n    }\n  });\n  console.log(\"updatePost\");\n  return response.json();\n} // useQuery(`comments${post.id}`)\n\n\nexport function PostDetail({\n  post\n}) {\n  _s();\n\n  const {\n    data,\n    isError,\n    isLoading\n  } = useQuery([\"comments\", post.id], () => fetchComments(post.id));\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Oops, sorry\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deletePost(post.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updatePost(post.id),\n      children: \"Update title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), data.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [comment.email, \": \", comment.body]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(PostDetail, \"DkCu/M/H/qJBve+1UG/TeE5/z38=\", false, function () {\n  return [useQuery];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/PostDetail.jsx"],"names":["QueryClient","useQuery","queryClient","fetchComments","postId","response","fetch","json","deletePost","window","confirm","method","updatePost","data","title","console","log","PostDetail","post","isError","isLoading","id","color","body","map","comment","email"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;;;AAEA,MAAMC,WAAW,GAAG,IAAIF,WAAJ,EAApB;;AAEA,eAAeG,aAAf,CAA6BC,MAA7B,EAAqC;AACnC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,wDAAuDF,MAAO,EADrC,CAA5B;AAGA,SAAOC,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,eAAeC,UAAf,CAA0BJ,MAA1B,EAAkC;AAChC,MAAIK,MAAM,CAACC,OAAP,CAAe,KAAf,CAAJ,EAA2B;AACzB,UAAML,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CF,MAAO,EAD3B,EAE1B;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAF0B,CAA5B;AAIA,WAAON,QAAQ,CAACE,IAAT,EAAP;AACD;AACF;;AAED,eAAeK,UAAf,CAA0BR,MAA1B,EAAkC;AAChC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CF,MAAO,EAD3B,EAE1B;AAAEO,IAAAA,MAAM,EAAE,OAAV;AAAmBE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAzB,GAF0B,CAA5B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAOX,QAAQ,CAACE,IAAT,EAAP;AACD,C,CACD;;;AACA,OAAO,SAASU,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAAA;;AACnC,QAAM;AAAEL,IAAAA,IAAF;AAAQM,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA+BnB,QAAQ,CAAC,CAAC,UAAD,EAAaiB,IAAI,CAACG,EAAlB,CAAD,EAAwB,MACnElB,aAAa,CAACe,IAAI,CAACG,EAAN,CAD8B,CAA7C;AAIA,MAAID,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA,gBAA+BJ,IAAI,CAACJ;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMN,UAAU,CAACU,IAAI,CAACG,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAE8D,GAF9D,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMT,UAAU,CAACM,IAAI,CAACG,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIH,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGV,IAAI,CAACW,GAAL,CAAUC,OAAD,iBACR;AAAA,iBACGA,OAAO,CAACC,KADX,QACoBD,OAAO,CAACF,IAD5B;AAAA,OAASE,OAAO,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA,kBADF;AAcD;;GAtBeJ,U;UACuBhB,Q;;;KADvBgB,U","sourcesContent":["import { QueryClient, useQuery } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nasync function fetchComments(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  );\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  if (window.confirm(\"삭제?\")) {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/posts/${postId}`,\n      { method: \"DELETE\" }\n    );\n    return response.json();\n  }\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${postId}`,\n    { method: \"PATCH\", data: { title: \"REACT QUERY FOREVER!!!!\" } }\n  );\n  console.log(\"updatePost\");\n  return response.json();\n}\n// useQuery(`comments${post.id}`)\nexport function PostDetail({ post }) {\n  const { data, isError, isLoading } = useQuery([\"comments\", post.id], () =>\n    fetchComments(post.id)\n  );\n  \n  if (isLoading) return <h3>Loading</h3>;\n  if (isError) return <h3>Oops, sorry</h3>;\n\n  return (\n    <>\n      <h3 style={{ color: \"blue\" }}>{post.title}</h3>\n      <button onClick={() => deletePost(post.id)}>Delete</button>{\" \"}\n      <button onClick={() => updatePost(post.id)}>Update title</button>\n      <p>{post.body}</p>\n      <h4>Comments</h4>\n      {data.map((comment) => (\n        <li key={comment.id}>\n          {comment.email}: {comment.body}\n        </li>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}