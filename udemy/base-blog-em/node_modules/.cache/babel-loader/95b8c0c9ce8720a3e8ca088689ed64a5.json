{"ast":null,"code":"var _jsxFileName = \"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { PostDetail } from \"./PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxPostPage = 10;\n\nasync function fetchPosts() {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts?_limit=10&_page=0\");\n  return response.json();\n}\n\nexport function Posts() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPost, setSelectedPost] = useState(null); // useQuery(\"쿼리 키\", 비동기 함수);\n\n  const {\n    data,\n    isLoading,\n    isError,\n    error\n  } = useQuery([\"posts\", currentPage], fetchPosts, {\n    staleTime: 2000\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Oops, \\uC6C1\\uC2A4 something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post-title\",\n        onClick: () => setSelectedPost(post),\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostDetail, {\n      post: selectedPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Posts, \"yj/jmQq6H2rZwhbyaALolMDcnvw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-blog-em/src/Posts.jsx"],"names":["useState","useQuery","PostDetail","maxPostPage","fetchPosts","response","fetch","json","Posts","currentPage","setCurrentPage","selectedPost","setSelectedPost","data","isLoading","isError","error","staleTime","toString","map","post","title","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,UAAT,QAA2B,cAA3B;;;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,eAAeC,UAAf,GAA4B;AAC1B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAD0B,CAA5B;AAGA,SAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD,CAFsB,CAItB;;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAsCf,QAAQ,CAClD,CAAC,OAAD,EAAUQ,WAAV,CADkD,EAElDL,UAFkD,EAGlD;AACEa,IAAAA,SAAS,EAAE;AADb,GAHkD,CAApD;AAOA,MAAIH,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAIC,OAAJ,EACE,oBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBACyC;AAAA,gBAAIC,KAAK,CAACE,QAAN;AAAJ;AAAA;AAAA;AAAA;AAAA,YADzC;AAAA,kBADF;AAMF,sBACE;AAAA,4BACE;AAAA,gBACGL,IAAI,CAACM,GAAL,CAAUC,IAAD,iBACR;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,OAAO,EAAE,MAAMR,eAAe,CAACQ,IAAD,CAHhC;AAAA,kBAKGA,IAAI,CAACC;AALR,SACOD,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAM,CAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,4BAAYb,WAAW,GAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,OAAO,EAAE,MAAM,CAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAqBE;AAAA;AAAA;AAAA;AAAA,YArBF,EAsBGE,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAtBnB;AAAA,kBADF;AA0BD;;GA9CeH,K;UAK8BP,Q;;;KAL9BO,K","sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { PostDetail } from \"./PostDetail\";\nconst maxPostPage = 10;\n\nasync function fetchPosts() {\n  const response = await fetch(\n    \"https://jsonplaceholder.typicode.com/posts?_limit=10&_page=0\"\n  );\n  return response.json();\n}\n\nexport function Posts() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // useQuery(\"쿼리 키\", 비동기 함수);\n  const { data, isLoading, isError, error } = useQuery(\n    [\"posts\", currentPage],\n    fetchPosts,\n    {\n      staleTime: 2000,\n    }\n  );\n  if (isLoading) return <h3>Loading...</h3>;\n  if (isError)\n    return (\n      <>\n        <h3>Oops, 웁스 something went wrong</h3> <p>{error.toString()}</p>\n      </>\n    );\n\n  return (\n    <>\n      <ul>\n        {data.map((post) => (\n          <li\n            key={post.id}\n            className=\"post-title\"\n            onClick={() => setSelectedPost(post)}\n          >\n            {post.title}\n          </li>\n        ))}\n      </ul>\n      <div className=\"pages\">\n        <button disabled onClick={() => {}}>\n          Previous page\n        </button>\n        <span>Page {currentPage + 1}</span>\n        <button disabled onClick={() => {}}>\n          Next page\n        </button>\n      </div>\n      <hr />\n      {selectedPost && <PostDetail post={selectedPost} />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}