{"ast":null,"code":"var _jsxFileName = \"/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-infinite-swapi/src/people/InfinitePeople.jsx\",\n    _s = $RefreshSig$();\n\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { Person } from \"./Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialUrl = \"https://swapi.dev/api/people\";\n\nconst fetchUrl = async url => {\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport function InfinitePeople() {\n  _s();\n\n  // data : 페이지 정보를 담고 있음\n  // fetchNextPage : 데이터가 더 필요할 때 어느 함수를 실행할지 지시하는 역할\n  // hasNextPage : 수집할 데이터가 더 있는지 결정하는 불리언 타입\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n    isFetching,\n    isError,\n    error\n  } = useInfiniteQuery(\"sw-people\", ({\n    pageParam = initialUrl\n  }) => fetchUrl(pageParam), {\n    getNextPageParam: lastPage => lastPage.next || undefined\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error! \", error.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  console.log(\"here\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isFetching && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      loadMore: fetchNextPage,\n      hasMore: hasNextPage,\n      children: data.pages.map(pageData => {\n        console.log(\"pageData\", pageData);\n        return pageData.results.map(person => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            name: person.name,\n            hairColor: person.hair_color,\n            eyeColor: person.eye_color\n          }, person.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(InfinitePeople, \"1hAoQODaU/Q/pQoimGQOVMHFBPY=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = InfinitePeople;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinitePeople\");","map":{"version":3,"sources":["/Users/kanghyew0n/Desktop/prac/React-Query-Prac/udemy/base-infinite-swapi/src/people/InfinitePeople.jsx"],"names":["InfiniteScroll","useInfiniteQuery","Person","initialUrl","fetchUrl","url","response","fetch","json","InfinitePeople","data","fetchNextPage","hasNextPage","isLoading","isFetching","isError","error","pageParam","getNextPageParam","lastPage","next","undefined","toString","console","log","pages","map","pageData","results","person","name","hair_color","eye_color"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,MAAMC,UAAU,GAAG,8BAAnB;;AACA,MAAMC,QAAQ,GAAG,MAAOC,GAAP,IAAe;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,SAAOC,QAAQ,CAACE,IAAT,EAAP;AACD,CAHD;;AAKA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B;AACA;AACA;AACA,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA;AAPI,MAQFf,gBAAgB,CAClB,WADkB,EAElB,CAAC;AAAEgB,IAAAA,SAAS,GAAGd;AAAd,GAAD,KAAgCC,QAAQ,CAACa,SAAD,CAFtB,EAGlB;AACEC,IAAAA,gBAAgB,EAAGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,IAAiBC;AADnD,GAHkB,CARpB;AAgBA,MAAIR,SAAJ,EAAe,oBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAIE,OAAJ,EAAa,oBAAO;AAAA,0BAAaC,KAAK,CAACM,QAAN,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEbC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,sBACE;AAAA,eACCV,UAAU,iBAAI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEH,aAA1B;AAAyC,MAAA,OAAO,EAAEC,WAAlD;AAAA,gBACGF,IAAI,CAACe,KAAL,CAAWC,GAAX,CAAgBC,QAAD,IAAc;AAC5BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;AACA,eAAOA,QAAQ,CAACC,OAAT,CAAiBF,GAAjB,CAAsBG,MAAD,IAAY;AACtC,8BACE,QAAC,MAAD;AAEE,YAAA,IAAI,EAAEA,MAAM,CAACC,IAFf;AAGE,YAAA,SAAS,EAAED,MAAM,CAACE,UAHpB;AAIE,YAAA,QAAQ,EAAEF,MAAM,CAACG;AAJnB,aACOH,MAAM,CAACC,IADd;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATM,CAAP;AAUD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoBD;;GA7CerB,c;UAYVR,gB;;;KAZUQ,c","sourcesContent":["import InfiniteScroll from \"react-infinite-scroller\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { Person } from \"./Person\";\n\nconst initialUrl = \"https://swapi.dev/api/people\";\nconst fetchUrl = async (url) => {\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport function InfinitePeople() {\n  // data : 페이지 정보를 담고 있음\n  // fetchNextPage : 데이터가 더 필요할 때 어느 함수를 실행할지 지시하는 역할\n  // hasNextPage : 수집할 데이터가 더 있는지 결정하는 불리언 타입\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n    isFetching,\n    isError,\n    error,\n  } = useInfiniteQuery(\n    \"sw-people\",\n    ({ pageParam = initialUrl }) => fetchUrl(pageParam),\n    {\n      getNextPageParam: (lastPage) => lastPage.next || undefined,\n    }\n  );\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n  if (isError) return <div>Error! {error.toString()}</div>;\n\n  console.log(\"here\");\n\n  return (\n    <>\n    {isFetching && <div className=\"loading\">Loading...</div>}\n      <InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage}>\n        {data.pages.map((pageData) => {\n          console.log(\"pageData\", pageData);\n          return pageData.results.map((person) => {\n            return (\n              <Person\n                key={person.name}\n                name={person.name}\n                hairColor={person.hair_color}\n                eyeColor={person.eye_color}\n              />\n            );\n          });\n        })}\n      </InfiniteScroll>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}